workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

# This file is a template, and might need editing before it works on your project.
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Rust.gitlab-ci.yml

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/rust/tags/
image: "rust:latest"

# Use cargo to test the project
test:clippy:
  cache: 
  - key:
      files:
        - client/Cargo.lock
    paths:
      - client/target/debug/deps
      - client/target/debug/build
  - key:
      files:
        - server/Cargo.lock
    paths:
      - server/target/debug/deps
      - server/target/debug/build
  script:
    - cd client
    - rustc --version && cargo --version  # Print version info for debugging
    - cargo clippy
    - cd ../server
    - cargo clippy

test:cargo:
  cache: 
  - key:
      files:
        - client/Cargo.lock
    paths:
      - client/target/debug/deps
      - client/target/debug/build
  - key:
      files:
        - server/Cargo.lock
    paths:
      - server/target/debug/deps
      - server/target/debug/build
  script:
    - cd client
    - rustc --version && cargo --version  # Print version info for debugging
    - cargo test --workspace --verbose
    - cd ../server
    - cargo test --workspace --verbose


build:cargo:
  cache:
  - key:
      files:
        - client/Cargo.lock
    paths:
      - client/target/debug/deps
      - client/target/debug/build
  - key:
      files:
        - server/Cargo.lock
    paths:
      - server/target/debug/deps
      - server/target/debug/build
  script:
    - cd client
    - rustc --version && cargo --version  # Print version info for debugging
    - cargo build --workspace --verbose
    - cd ../server
    - cargo build --workspace --verbose